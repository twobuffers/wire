import buildcfg.Libs
import buildcfg.Versions

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.vanniktech.maven.publish'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs += ['-Xopt-in=kotlin.RequiresOptIn',]
    }
}

android {
    compileSdkVersion buildConfig.compileSdk
    buildToolsVersion buildConfig.buildTools
    defaultConfig {
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk
    }
    buildTypes {
        release {
            consumerProguardFiles 'consumer-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = Versions.JAVA_VERSION_STR
        targetCompatibility = Versions.JAVA_VERSION_STR
    }
}

dependencies {
    implementation project(':wire-di-annotations-common')
    implementation project(':wire-coroutines-common')
    implementation project(':wire-utils')
    api project(':wire-initializer')

    implementation Libs.Kotlin.kotlinStdlib
    implementation Libs.Coroutines.coroutinesCore
    implementation Libs.Coroutines.coroutinesPlayServices
    api Libs.AndroidX.Annotation.annotation
    api Libs.Dagger.dagger
    api Libs.Dagger.daggerAndroid
    kapt Libs.Dagger.daggerCompiler
    kapt Libs.Dagger.daggerAndroidProcessor
    api Libs.Firebase.firebaseAnalyticsKtx // export: to enable analytics for push notifications
    api Libs.Firebase.firebaseMessagingKtx // export: FirebaseMessaging, RemoteMessage
}
